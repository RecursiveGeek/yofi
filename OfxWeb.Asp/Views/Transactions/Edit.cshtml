@model OfxWeb.Asp.Models.Transaction

@{
    ViewData["Title"] = "Edit Transaction";
}

<h2>@ViewData["Title"]</h2>
<hr />
<div class="row">
    <div class="col-md-6">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="ID" />
            <input type="hidden" asp-for="ReceiptUrl" />
            <div class="form-group">
                <label asp-for="Payee" class="control-label"></label>
                <input asp-for="Payee" class="form-control" />
                <span asp-validation-for="Payee" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Amount" class="control-label"></label>
                <input asp-for="Amount" class="form-control" />
                <span asp-validation-for="Amount" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Timestamp" class="control-label"></label>
                <input asp-for="Timestamp" class="form-control" />
                <span asp-validation-for="Timestamp" class="text-danger"></span>
            </div>
            @if (!Model.HasSplits)
            {
                <div class="form-group">
                    <label asp-for="Category" class="control-label"></label>
                    <input asp-for="Category" class="form-control category-autocomplete" autocomplete="off" />
                    <span asp-validation-for="Category" class="text-danger"></span>
                </div>
            }
            <div class="form-group">
                <label asp-for="Memo" class="control-label"></label>
                <input asp-for="Memo" class="form-control" />
                <span asp-validation-for="Memo" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="BankReference" class="control-label"></label>
                <input asp-for="BankReference" class="form-control" />
                <span asp-validation-for="BankReference" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
                <a asp-action="Index" class="btn btn-secondary">Cancel</a>
                <input type="submit" value="Duplicate" class="btn btn-outline-secondary" asp-route-duplicate="true" />
                <a asp-action="Delete" asp-route-id="@Model.ID" class="btn btn-outline-secondary" style="float:right">Delete</a>
            </div>
        </form>

    </div>
</div>


<h2>Splits</h2>
<hr />
@if (!Model.HasSplits)
{
    <form method="post" enctype="multipart/form-data" asp-controller="Transactions" asp-action="UpSplits">
        <div class="input-group mb-3">
            <button class="btn btn-secondary" type="submit" id="inputGroupFileAddon03">Upload</button>
            <input type="file" class="form-control" id="inputGroupFile03" aria-describedby="inputGroupFileAddon03" aria-label="Upload" name="files">
            <input type="hidden" asp-for="ID" />
        </div>
    </form>
    }

@if (!Model.IsSplitsOK)
{
    <div class="alert alert-danger" role="alert">
        <strong>Incomplete Splits Balance</strong> Please <a asp-action="CreateSplit" asp-route-id="@Model.ID" class="alert-link">add another split</a> to contain the remaining balance.
    </div>
}

<div class="row">
    <div class="col-md-12">

        @if (Model.HasSplits)
        {
            var splitorder = (Model.Amount < 0) ? Model.Splits.OrderBy(x => x.Amount) : Model.Splits.OrderByDescending(x => x.Amount);
            <table class="table">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(x => x.Category)
                        </th>
                        <th>
                            @Html.DisplayNameFor(x => x.Amount)
                        </th>
                        <th>
                            @Html.DisplayNameFor(x => x.Memo)
                        </th>
                        <th>
                        </th>
                    </tr>
                </thead>
                <tbody>

                    @foreach (var split in splitorder)
                    {
                        <tr>
                            <td>
                                @(split.Category ?? String.Empty)
                            </td>
                            <td>
                                @split.Amount
                            </td>
                            <td>
                                @split.Memo
                            </td>
                            <td>
                                <a class="btn btn-outline-secondary btn-sm" asp-controller="Splits" asp-action="Edit" asp-route-id="@split.ID"><i class="fa fa-edit"></i></a>
                                <a class="btn btn-outline-secondary btn-sm" asp-controller="Splits" asp-action="Delete" asp-route-id="@split.ID"><i class="fa fa-trash-alt"></i></a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    </div>
</div>

<a asp-action="CreateSplit" asp-route-id="@Model.ID" class="btn btn-primary mb-3">Add</a>

<br />

<h2>Receipt</h2>
<hr />

@if (null == Model.ReceiptUrl)
{
    <form method="post" enctype="multipart/form-data" asp-controller="Transactions" asp-action="UpReceipt">
        <div class="input-group mb-3">
            <button class="btn btn-primary" type="submit" id="inputGroupFileAddon03">Upload</button>
            <input type="file" class="form-control" id="inputGroupFile03" aria-describedby="inputGroupFileAddon03" aria-label="Upload" name="files">
            <input type="hidden" asp-for="ID" />
        </div>
    </form>
}
else
{
    <a asp-action="GetReceipt" asp-route-id="@Model.ID" class="btn btn-primary">Download</a>
    <a asp-action="DeleteReceipt" asp-route-id="@Model.ID" class="btn btn-outline-secondary">Delete</a>
}

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
