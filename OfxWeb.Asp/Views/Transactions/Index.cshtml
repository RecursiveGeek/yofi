@model IEnumerable<OfxWeb.Asp.Models.Transaction>

@{
    ViewData["Title"] = "Index";
}
<h2>Index</h2>

<p>
    <a asp-action="Create">Create New</a> |
    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-page="@ViewData["PreviousPage"]"
       asp-route-search="@ViewData["CurrentFilterToggleHidden"]">
        Show Hidden
    </a> |
    <a asp-action="Download">Export</a>
</p>

@{

    var prevDisabled = ViewData["PreviousPage"] == null ? "disabled" : "";
    var nextDisabled = ViewData["NextPage"] == null ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@ViewData["PreviousPage"]"
   asp-route-search="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@ViewData["NextPage"]"
   asp-route-search="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by: Payee <input type="text" name="searchPayee" value="@ViewData["CurrentSearchPayee"]" />
            Category <input type="text" name="searchCategory" value="@ViewData["CurrentSearchCategory"]" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            @if ((bool)(ViewData["ShowHidden"]))
            {
                <th>
                    Hidden
                </th>
            }
            <th>
                <a asp-action="Index" asp-route-search="@ViewData["CurrentFilter"]" asp-route-sortOrder="@ViewData["DateSortParm"]">@Html.DisplayNameFor(model => model.Timestamp)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-search="@ViewData["CurrentFilter"]" asp-route-sortOrder="@ViewData["PayeeSortParm"]">@Html.DisplayNameFor(model => model.Payee)</a>
            </th>
            <th></th>
            <th>
                <a asp-action="Index" asp-route-search="@ViewData["CurrentFilter"]" asp-route-sortOrder="@ViewData["AmountSortParm"]">@Html.DisplayNameFor(model => model.Amount)</a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Memo)
            </th>
            <th>
                <a asp-action="Index" asp-route-search="@ViewData["CurrentFilter"]" asp-route-sortOrder="@ViewData["CategorySortParm"]">@Html.DisplayNameFor(model => model.Category)</a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SubCategory)
            </th>
            <th>
                <a asp-action="Index" asp-route-search="@ViewData["CurrentFilter"]" asp-route-sortOrder="@ViewData["BankReferenceSortParm"]">@Html.DisplayNameFor(model => model.BankReference)</a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                @if ((bool)(ViewData["ShowHidden"]))
                {
                    <td>
                        @{ var hiddenchecked = (item.Hidden == true) ? "checked" : string.Empty; }
                        <input type="checkbox" class="checkbox-hidden" @hiddenchecked data-id="@item.ID">
                    </td>
                }
                <td>
                    @Html.DisplayFor(modelItem => item.Timestamp)
                </td>
                <td class="display-payee">
                    @Html.DisplayFor(modelItem => item.Payee)
                </td>
                <td>
                    <a asp-controller="Payees" asp-action="Create" asp-route-txid="@item.ID">Add</a>
                    <!--
                    <a asp-action="ApplyPayee" asp-route-id="@item.ID">Apply</a>
                    -->
                    <a href="#" class="apply-link" data-id="@item.ID">Apply</a>

                    <a asp-action="Index"
                       asp-route-sortOrder="@ViewData["CurrentSort"]"
                       asp-route-searchPayee="@item.Payee.Trim()">
                        Search
                    </a>

                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Amount)
                </td>
                <td class="display-memo">
                    @Html.DisplayFor(modelItem => item.Memo)
                </td>
                <td class="display-category">
                    @Html.DisplayFor(modelItem => item.Category)
                </td>
                <td class="display-subcategory">
                    @Html.DisplayFor(modelItem => item.SubCategory)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.BankReference)
                </td>
                <td>
                    <button type="button" class="btn btn-default" data-id="@item.ID" data-toggle="modal" data-target="#editModal">
                        Edit
                    </button>
                </td>
            </tr>
        }
    </tbody>
</table>

<!--
    TODO: "Payee" column
    * If cat/subcat empty, and payee exists in payee table, show payee cat/subcat and "apply" button
        This will require a left join to payee table on transaction.payee == payee.name, then include payee.cat & .subcat here
    * If cat/subcat set, and payee not exists in payee table, show "add" button -> Payees/Add
-->

<h2>Upload</h2>

<form method="post" enctype="multipart/form-data" asp-controller="Transactions" asp-action="Upload">
    <div class="form-group">
        <div class="col-md-10">
            <p>Upload one or more files using this form:</p>
            <input type="file" name="files" multiple size="50" />
        </div>
        <div class="col-md-10">
            <label for="date" class="control-label">Ignore transactions before:</label>
            <input name="date" class="form-control" width="50" />
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-10">
            <input type="submit" value="Upload" class="btn btn-primary" />
        </div>
    </div>
</form>

<!-- Modal Edit -->
<!-- https://getbootstrap.com/docs/4.0/components/modal/ -->
<!-- Working on this: https://stackoverflow.com/questions/16011151/mvc-4-edit-modal-form-using-bootstrap -->

<div class="modal fade" id="editModal" tabindex="-1" role="dialog" aria-labelledby="editModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-body">
                ...
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                <a asp-action="Edit" class="btn btn-default asp-route-id">More</a>
                <button type="button" class="btn btn-primary" data-dismiss="modal">Save changes</button>
            </div>
            <!-- asp-route-id="@@item.ID"  -->
        </div>
    </div>
</div>