@model IEnumerable<OfxWeb.Asp.Models.Transaction>

@{
    ViewData["Title"] = "Transactions";

    var prevDisabled = ViewData["PreviousPage"] == null ? "disabled" : "";
    var nextDisabled = ViewData["NextPage"] == null ? "disabled" : "";
}

@section scripts {
    <script type="text/javascript">
        function dropHandler(ev) {
        }

        function dragOverHandler(ev) {
            console.log('File(s) in drop zone');

            // Prevent default behavior (Prevent file from being opened)
            ev.preventDefault();
        }
    </script>
}

<div style="float:right; margin-bottom:15px">
    @if (ViewData["PreviousPage"] != null)
    {
        <a asp-action="Index"
           asp-route-sortOrder="@ViewData["CurrentSort"]"
           asp-route-page="@ViewData["PreviousPage"]"
           asp-route-search="@ViewData["CurrentFilter"]"
           class="btn @prevDisabled">
            <i class="fas fa-angle-double-left"></i>
        </a>
    }
    @if (ViewData["PreviousPage"] != null && ViewData["NextPage"] != null)
    {
        <span>|</span>
    }
    @if(ViewData["NextPage"] != null)
    {
        <a asp-action="Index"
           asp-route-sortOrder="@ViewData["CurrentSort"]"
           asp-route-page="@ViewData["NextPage"]"
           asp-route-search="@ViewData["CurrentFilter"]"
           class="btn @nextDisabled">
            <i class="fas fa-angle-double-right"></i>
        </a>
    }
</div>

<div style="margin-bottom:15px; background-color: lightgray">
    <a asp-action="Create" class="btn">Create New</a> |
    <a asp-action="Index" class="btn"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-page="@ViewData["PreviousPage"]"
       asp-route-search="@ViewData["CurrentFilterToggleHidden"]">
        Show Hidden
    </a> |
    <a asp-action="Index" class="btn"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-page="@ViewData["PreviousPage"]"
       asp-route-search="@ViewData["CurrentFilterToggleSelected"]">
        Bulk Edit
    </a> |
    <!--<a asp-action="Download" class="btn btn-secondary">Export</a>-->
    <a href="#" data-bs-toggle="modal" data-bs-target="#exportHowModal" class="btn">Export</a>
</div>

@if ((bool)(ViewData["ShowSelected"]))
{
    <form asp-action="BulkEdit" method="post">
        <div class="form-actions">
            <p>
                Category <input type="text" name="Category" class="col-md-4 category-autocomplete" autocomplete="off"  />
                <input type="submit" value="OK" class="btn btn-primary" />
                <a asp-action="Index" asp-route-search="@ViewData["CurrentFilterToggleSelected"]" class="btn btn-outline-secondard">Cancel</a>
            </p>
        </div>
    </form>
}

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            <input type="text" name="q" value="@ViewData["Query"]" class="col-md-4 category-autocomplete" autocomplete="off" />
            <input type="submit" value="Search" class="btn btn-secondary" />
            <a asp-action="Index" class="btn btn-light">Reset</a>
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            @if ((bool)(ViewData["ShowHidden"]))
            {
                <th>
                    Hidden
                </th>
            }
            @if ((bool)(ViewData["ShowSelected"]))
            {
                <th>
                    Edit
                </th>
            }
            <th>
                <a asp-action="Index" asp-route-search="@ViewData["CurrentFilter"]" asp-route-sortOrder="@ViewData["DateSortParm"]">Date</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-search="@ViewData["CurrentFilter"]" asp-route-sortOrder="@ViewData["PayeeSortParm"]">@Html.DisplayNameFor(model => model.Payee)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-search="@ViewData["CurrentFilter"]" asp-route-sortOrder="@ViewData["AmountSortParm"]">@Html.DisplayNameFor(model => model.Amount)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-search="@ViewData["CurrentFilter"]" asp-route-sortOrder="@ViewData["CategorySortParm"]">@Html.DisplayNameFor(model => model.Category)</a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Memo)
            </th>
            @if ((bool)(ViewData["ShowHidden"]))
            {
                <th>
                    <a asp-action="Index" asp-route-search="@ViewData["CurrentFilter"]" asp-route-sortOrder="@ViewData["BankReferenceSortParm"]">@Html.DisplayNameFor(model => model.BankReference)</a>
                </th>
            }
            <th colspan="5">
                Actions
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr class="txdrop" data-id="@item.ID" ondragover="dragOverHandler(event);">
                @if ((bool)(ViewData["ShowHidden"]))
                {
                    <td>
                        @{ var checkedornot = (item.Hidden == true) ? "checked" : string.Empty; }
                        <input type="checkbox" class="checkbox-hidden" @checkedornot data-id="@item.ID">
                    </td>
                }
                @if ((bool)(ViewData["ShowSelected"]))
                {
                    <td>
                        @{ var checkedornot = (item.Selected == true) ? "checked" : string.Empty; }
                        <input type="checkbox" class="checkbox-selected" @checkedornot data-id="@item.ID">
                    </td>
                }
                <td>
                    @Html.DisplayFor(modelItem => item.Timestamp)
                </td>
                <td class="display-payee">
                    @Html.DisplayFor(modelItem => item.Payee)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Amount)
                </td>
                <td class="display-category">
                    @if (item.HasSplits)
                    {
                        <p>SPLIT</p>
                    }
                    else
                    {
                        @Html.DisplayFor(modelItem => item.Category)
                    }
                </td>
                <td class="display-memo">
                    @Html.DisplayFor(modelItem => item.Memo)
                </td>
                @if ((bool)(ViewData["ShowHidden"]))
                {
                    <td>
                        @Html.DisplayFor(modelItem => item.BankReference)
                    </td>
                }
                <td style="padding-left:0; padding-right:5px">

                    @if (item.HasSplits)
                    {
                        <a asp-action="Edit" asp-route-id="@item.ID" target="_blank">
                            <i class="fa fa-edit"></i>
                        </a>
                    }
                    else
                    {
                        <a href="#" data-id="@item.ID" data-bs-toggle="modal" data-bs-target="#editModal">
                            <i class="fa fa-edit"></i>
                        </a>
                    }
                </td>
                <td style="padding-left:0; padding-right:5px">
                    <a asp-action="Index"
                       asp-route-sortOrder="@ViewData["CurrentSort"]"
                       asp-route-q="p=@item.Payee?.Trim()">
                        <i class="fa fa-search"></i>
                    </a>
                </td>
                <td style="padding-left:0; padding-right:5px">
                    <a href="#" data-id="@item.ID" data-bs-toggle="modal" data-bs-target="#addPayeeModal">
                        <i class="fa fa-plus"></i>
                    </a>
                </td>
                <td style="padding-left:0; padding-right:5px">
                    <a href="#" class="apply-link" data-id="@item.ID"><i class="fa fa-paint-brush"></i></a>
                </td>
                <td style="padding-left:0; padding-right:0" class="display-receipt">
                    @if (null != item.ReceiptUrl)
                    {
                        <a href="/Transactions/GetReceipt/@item.ID" target="_blank"><i class="far fa-file-pdf"></i></a>
                    }
                    else
                    {
                        <a href="/Transactions/GetReceipt/@item.ID" style="display:none" target="_blank"><i class="fa fa-file-pdf"></i></a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

<!--
    TODO: "Payee" column
    * If cat/subcat empty, and payee exists in payee table, show payee cat/subcat and "apply" button
        This will require a left join to payee table on transaction.payee == payee.name, then include payee.cat & .subcat here
    * If cat/subcat set, and payee not exists in payee table, show "add" button -> Payees/Add
-->
<!-- Modal Edit -->
<!-- https://getbootstrap.com/docs/4.0/components/modal/ -->
<!-- Working on this: https://stackoverflow.com/questions/16011151/mvc-4-edit-modal-form-using-bootstrap -->

<div class="actiondialog modal fade" id="editModal" tabindex="-1" role="dialog" aria-labelledby="editModalLabel" aria-hidden="true" data-endpoint="/Transactions/EditModal/">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <form>
                <div class="modal-body">
                    ...
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-light" data-bs-dismiss="modal">Cancel</button>
                    <a asp-action="Edit" class="btn btn-secondary asp-route-id btnDismissEditModal" target="_blank">More</a>
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>
            </form>
            <!-- asp-route-id="@@item.ID"  -->
        </div>
    </div>
</div>

<div class="actiondialog modal fade" id="addPayeeModal" tabindex="-1" role="dialog" aria-labelledby="addPayeeModalLabel" aria-hidden="true" data-endpoint="/Payees/CreateModal/">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <form>
                <div class="modal-body">
                    ...
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-light" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>
            </form>
            <!-- asp-route-id="@@item.ID"  -->
        </div>
    </div>
</div>

<div class="actiondialog modal fade" id="exportHowModal" tabindex="-1" role="dialog" aria-labelledby="exportHowModalLabel" aria-hidden="true" data-endpoint="/Transactions/DownloadPartial/">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <form method="post" action="/Transactions/Download">
                <div class="modal-body">
                    ...
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-light" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Download</button>
                </div>
            </form>
            <!-- asp-route-id="@@item.ID"  -->
        </div>
    </div>
</div>
