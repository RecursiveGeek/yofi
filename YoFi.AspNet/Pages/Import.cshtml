@page
@using YoFi.AspNet.Pages
@using Common.DotNet
@inject Common.DotNet.IClock _clock
@model YoFi.AspNet.Pages.ImportModel
@{
    Layout = "_Layout";
    ViewData["Title"] = "Importer";
}

@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@functions{
    public string GetAntiXsrfRequestToken()
    {
        return Xsrf.GetAndStoreTokens(HttpContext).RequestToken;
    }
}

<input type="hidden" id="xsrf"
       name="xsrf" value="@GetAntiXsrfRequestToken()">

<nav class="navbar navbar-light navbar-page mb-3">
    <div class="container">
        <span class="navbar-brand mb-0 h1">@ViewData["Title"]</span>
        <div class="nav-item dropdown">
            <a href="#" class="nav-link dropdown-toggle" id="dropdownMenuButtonAction" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Actions
            </a>
            <div class="dropdown-menu" aria-labelledby="dropdownMenuButtonAction">
                <a href="#" data-bs-toggle="modal" data-bs-target="#helpModal" class="btn">Help Topic</a>
            </div>
        </div>
    </div>
</nav>

@if (!string.IsNullOrEmpty(Model.Error))
{
    <h2>Error</h2>
    <p class="alert-danger p-3">@Model.Error</p>
}

@if (0 == Model.Transactions.PageInfo.TotalItems)
{
    <h2>Select Files</h2>
    <form method="post" enctype="multipart/form-data" asp-page-handler="Upload">
        <div class="input-group mb-3 mt-3">
            <button class="btn btn-primary" type="submit" id="inputGroupFileAddon03" disabled>Upload</button>
            <input type="file" class="form-control" id="inputGroupFile03" aria-describedby="inputGroupFileAddon03" aria-label="Upload" name="files" multiple>
        </div>
    </form>

    <h2 class="mt-4">Sample Data</h2>
    <p>
        Here are a collection of files you could download, then upload on this page, to add some sample data to your database. These files will demonstrate how to
        format your own data for uploading.
    </p>

    <div class="row">
        @foreach (var offering in Model.Offerings.Where(x => x.Kind == YoFi.Core.SampleGen.SampleDataDownloadOfferingKind.Primary))
        {
            <div class="col-sm-4 col-12 p-2 d-flex">
                <a class="btn flex-fill highlight" asp-page-handler="Sample" asp-route-what="@offering.ID">
                    @offering.FileType<br />@offering.Description<br />@_clock.Now.Year
                </a>
            </div>
        }
    </div>

    <div class="row mb-3">
        @foreach (var offering in Model.Offerings.Where(x => x.Kind == YoFi.Core.SampleGen.SampleDataDownloadOfferingKind.Monthly))
        {
            <div class="col-lg-1 col-md-2 col-sm-3 col-4 p-2 d-flex">
                <a class="btn flex-fill highlight" asp-page-handler="Sample" asp-route-what="@offering.ID">
                    @offering.FileType<br />@offering.Description<br />@_clock.Now.Year
                </a>
            </div>
        }
    </div>

}
else
{
    <h2>Imported Transactions</h2>
    <p>These transactions are waiting in an import queue. Do you want to import them now, or delete them?</p>
    <form method="post" asp-page-handler="Go">
        <button type="submit" name="command" value="ok" class="btn btn-primary mb-3" data-test-id="btn-import">Import</button>
        <button type="submit" name="command" value="cancel" class="btn btn-outline-secondary mb-3" data-test-id="btn-delete">Delete</button>
    </form>

    <table class="table">
        <thead>
            <tr>
                <th>Import?</th>
                <th>
                    Date
                </th>
                <th>
                    Payee
                </th>
                <th style="text-align:right">
                    Amount
                </th>
                <th>
                    Category
                </th>
                <th>
                    Memo
                </th>
                <th>
                    BankReference
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Transactions.Items)
            {
                var highlight = ((ViewData["Highlight"] as HashSet<int>)?.Contains(item.ID) ?? false) ? "alert alert-warning" : string.Empty;
                <tr class="@highlight">
                    <td>
                        @{ var checkedornot = (item.Selected == true) ? "checked" : string.Empty; }
                        <input type="checkbox" class="checkbox-post" @checkedornot data-endpoint="/ajax/tx/Select/@item.ID">
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Timestamp)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Payee)
                    </td>
                    <td style="text-align:right">
                        @Html.DisplayFor(modelItem => item.Amount)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Category)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Memo)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.BankReference)
                    </td>
                </tr>
            }
        </tbody>
    </table>

    @await Html.PartialAsync("/Views/Shared/_PaginationPartial.cshtml", Model.Transactions)
}

@if (Model.NumBudgetTxsUploaded > 0)
{
    var morecomments = (Model.NumBudgetTxsUploaded > ImportModel.MaxOtherItemsToShow) ? $" You'll find the first {ImportModel.MaxOtherItemsToShow} items shown below." : string.Empty;
    <h2>Imported Budget Line Items</h2>
    <p>@Model.NumBudgetTxsUploaded items have been imported to your budget. You can review your entire set of budget line items on the Edit Budget page.@morecomments</p>
    <a asp-controller="BudgetTxs" asp-action="Index" class="btn btn-primary">Edit Budget &raquo;</a>

    <table class="table">
        <thead>
            <tr>
                <th>
                    Date
                </th>
                <th>
                    Category
                </th>
                <th>
                    Memo
                </th>
                <th>
                    Amount
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.BudgetTxs)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Timestamp)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Category)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Memo)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Amount)
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
@if (Model.NumPayeesUploaded > 0)
{
    var morecomments = (Model.NumPayeesUploaded > ImportModel.MaxOtherItemsToShow) ? $" You'll find the first {ImportModel.MaxOtherItemsToShow} items shown below." : string.Empty;

    <h2>Imported Payee Matching Rules</h2>
    <p>@Model.NumPayeesUploaded items have been imported to your payee matching rules. You can review your entire set on the Payees page.@morecomments</p>
    <a asp-controller="Payees" asp-action="Index" class="btn btn-primary">Payees &raquo;</a>

    <table class="table">
        <thead>
            <tr>
                <th>
                    Category
                </th>
                <th>
                    Name
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Payees)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Category)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@await Html.PartialAsync("/Views/Shared/_HelpDialogPartial.cshtml", "import")
