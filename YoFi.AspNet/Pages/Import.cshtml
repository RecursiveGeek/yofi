@page
@model YoFi.AspNet.Pages.ImportModel
@{
    Layout = "_Layout";
    ViewData["Title"] = "Importer";
}

@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@functions{
    public string GetAntiXsrfRequestToken()
    {
        return Xsrf.GetAndStoreTokens(HttpContext).RequestToken;
    }
}

<input type="hidden" id="xsrf"
       name="xsrf" value="@GetAntiXsrfRequestToken()">

<nav class="navbar navbar-light navbar-page mb-3">
    <div class="container">
        <span class="navbar-brand mb-0 h1">@ViewData["Title"]</span>
        <div class="nav-item dropdown">
            <a href="#" class="nav-link dropdown-toggle" id="dropdownMenuButtonAction" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Actions
            </a>
            <div class="dropdown-menu" aria-labelledby="dropdownMenuButtonAction">
                <a href="#" data-bs-toggle="modal" data-bs-target="#helpModal" class="btn">Help Topic</a>
            </div>
        </div>
    </div>
</nav>

@if (!Model.Transactions.Any())
{
    <form method="post" enctype="multipart/form-data" asp-controller="Transactions" asp-action="Upload">
        <div class="input-group mb-3 mt-3">
            <button class="btn btn-primary" type="submit" id="inputGroupFileAddon03" disabled>Upload</button>
            <input type="file" class="form-control" id="inputGroupFile03" aria-describedby="inputGroupFileAddon03" aria-label="Upload" name="files" multiple>
        </div>
    </form>
}
else
{
    <form asp-action="ProcessImported">
        <button type="submit" name="command" value="ok" class="btn btn-primary mb-3">Import</button>
        <button type="submit" name="command" value="cancel" class="btn btn-outline-secondary mb-3">Delete</button>
    </form>

    <table class="table">
        <thead>
            <tr>
                <th>Import?</th>
                <th>
                    Date
                </th>
                <th>
                    Payee
                </th>
                <th style="text-align:right">
                    Amount
                </th>
                <th>
                    Category
                </th>
                <th>
                    Memo
                </th>
                <th>
                    BankReference
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Transactions)
            {
                var highlight = ((ViewData["Highlight"] as HashSet<int>)?.Contains(item.ID) ?? false) ? "alert alert-warning" : string.Empty;
                <tr class="@highlight">
                    <td>
                        @{ var checkedornot = (item.Selected == true) ? "checked" : string.Empty; }
                        <input type="checkbox" class="checkbox-post" @checkedornot data-endpoint="/api/Select/@item.ID">
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Timestamp)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Payee)
                    </td>
                    <td style="text-align:right">
                        @Html.DisplayFor(modelItem => item.Amount)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Category)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Memo)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.BankReference)
                    </td>
                </tr>
            }
        </tbody>
    </table>

    @await Html.PartialAsync("/Views/Shared/_PaginationPartial.cshtml", Model.Divider)

}

@await Html.PartialAsync("/Views/Shared/_HelpDialogPartial.cshtml", "import")
