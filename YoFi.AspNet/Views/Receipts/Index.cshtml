@model IEnumerable<YoFi.Core.Models.Receipt>

@{
    ViewData["Title"] = "Receipts";
}

@*
    ANTI-FORGERY
*@

@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@functions{
    public string GetAntiXsrfRequestToken()
    {
        return Xsrf.GetAndStoreTokens(Context).RequestToken;
    }
}

@*
    PAGE NAVBAR
*@

<nav class="navbar navbar-light navbar-page mb-3">
    <div class="container">
        <span class="navbar-brand mb-0 h1">@ViewData["Title"]</span>
        <div class="nav-item dropdown">
            <a href="#" class="nav-link dropdown-toggle" id="dropdownMenuButtonAction" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Actions
            </a>
            <div class="dropdown-menu" aria-labelledby="dropdownMenuButtonAction">
                <a href="#" data-bs-toggle="modal" data-bs-target="#helpModal" class="btn">Help Topic</a>
            </div>
        </div>
    </div>
</nav>

@*
    RESULTS TABLE
*@

@if (Model.Any())
{
<table class="table" data-test-id="results">
    <thead>
        <tr class="row">
            <th class="col-lg-2 col-3">
                @Html.DisplayNameFor(model => model.Timestamp)
            </th>
            <th class="col-lg-5 col-6">
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th class="col-lg-1 col-3" style="text-align:right">
                @Html.DisplayNameFor(model => model.Amount)
            </th>
            <th class="d-none d-lg-block col-lg-4">
                @Html.DisplayNameFor(model => model.Memo)
            </th>
            <th class="d-none">
                @Html.DisplayNameFor(model => model.Filename)
            </th>
        </tr>
    </thead>
    <tbody>
    @foreach (var item in Model) 
    {
        var nmatches = item.Matches.Count;

        <tr class="row">
            <td class="col-lg-2 col-3">
                <span class="me-1">@Html.DisplayFor(modelItem => item.Timestamp)</span>
            </td>
            <td class="col-lg-5 col-6">
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td class="col-lg-1 col-3" style="text-align:right">
                @Html.DisplayFor(modelItem => item.Amount)
            </td>
            <td class="col-lg-4 col-12">
                @if(item.Memo != null)
                {
                    <span class="d-lg-none">Memo: </span><span data-test-id="memo">@Html.DisplayFor(modelItem => item.Memo)</span>
                }
            </td>
            <td class="col-md-8 col-12">
                <span class="d-none d-sm-inline">Filename: </span>@Html.DisplayFor(modelItem => item.Filename)
            </td>
            <td data-test-id="Matches" data-test-value="@nmatches" class="col-md-4 col-12">
                <div class="d-flex">
                <div class="ms-auto">
                    <form method="post" asp-action="Action">
                        <input type="hidden" name="id" value="@item.ID"/>
                        @if (nmatches == 1)
                        {
                            <input type="hidden" name="txid" value="@item.Matches.Single().ID" />
                            <input type="submit" name="command" value="Accept" class="btn btn-sm btn-primary my-1"/>
                        }
                    </form>
                </div>
                <div class="ms-1">
                    @if (nmatches == 1)
                    {
                        <a asp-controller="Transactions" asp-action="Create" asp-route-rid="@item.ID" class="btn btn-sm btn-secondary my-1" data-bs-toggle="tooltip" title="Create"><i class="fa fa-plus"></i></a>
                    }
                    else
                    {
                        <a asp-controller="Transactions" asp-action="Create" asp-route-rid="@item.ID" class="btn btn-sm btn-primary my-1">Create</a>
                    }
                </div>
                @if (nmatches > 0)
                {
                    <div class="ms-1">
                    <button type="button" class="btn btn-sm btn-secondary my-1" data-id="@item.ID" data-bs-toggle="modal" data-bs-target="#detailsModal" data-test-id="review"><i data-bs-toggle="tooltip" title="Review" class="fa fa-eye"></i></button>                            
                    </div>
                }
                <div class="ms-1">
                    <form method="post" asp-action="Delete">
                        <input type="hidden" name="id" value="@item.ID"/>
                        <button type="submit" class="btn btn-sm btn-outline-secondary my-1" data-bs-toggle="tooltip" title="Delete"><i class="fa fa-trash-alt"></i></button>
                    </form>
                </div>
                </div>
            </td>
        </tr>
    }
    </tbody>
</table>
}

@*
    ACCEPT ALL BUTTON
*@

@if (Model.Any(x=>x.Matches.Count == 1))
{
    <form asp-action="AcceptAll">
        <input type="submit" value="Accept All" class="btn btn-primary" data-test-id="accept-all" />
    </form>
    <hr/>
}

@*
    UPLOAD FILES CONTROL
*@

@{
    var btnclass = (Model.Any(x => x.Matches.Count == 1)) ? "btn-secondary" : "btn-primary";
}

<form method="post" enctype="multipart/form-data" asp-action="Upload">
    <div class="input-group mb-3 mt-3">
        <button class="btn @btnclass" type="submit" id="inputGroupFileAddon03" data-test-id="btn-create-receipt" disabled>Upload</button>
        <input type="file" class="form-control" id="inputGroupFile03" aria-describedby="inputGroupFileAddon03" aria-label="Upload" name="files" multiple>
    </div>
</form>

@*
    HELP TEXT
*@

@if (!Model.Any())
{
<div data-test-id="help-text">
<p>You can upload receipts here, then later match them with your transactions. If you name them according to the expected naming convention, the system can help you find the right transaction.</p>
<p>Here’s how you name them: {Payee Name} ${Amount} {MM}-{DD} {Memo}.pdf/png/jpg.</p>
<p>For example: Uptown Espresso $5.11 12-29 Afternoon pick-me up.pdf.</p>
<p>You can include as many or as few of these terms as you like. The more you include, the better the transaction matches to follow.</p>
</div>    
}

@*
    DETAILS DIALOG
*@

<div class="buttondialog modal fade" id="detailsModal" tabindex="-1" role="dialog" aria-labelledby="detailsModalLabel" aria-hidden="true" data-endpoint="/Receipts/Details">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-body">
                <div class="d-flex justify-content-center spinner-container">
                    <div class="spinner-border my-5" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" data-test-id="btn-cancel">Cancel</button>
            </div>
        </div>
    </div>
</div>

@*
    HELP DIALOG
*@

@await Html.PartialAsync("/Views/Shared/_HelpDialogPartial.cshtml", "receipt")
